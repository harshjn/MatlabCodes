%%
% filenames=["0b","0c","0d"];

filename='0b.avi';
v=VideoReader(strcat('F:\HarshDataAnalysis\12.22.17\2\',filename));
Fs=v.FrameRate; 

TIMES=[0,v.duration];  %Starting and Ending time intervals

add='C:\Users\Admin\OneDrive\BB30Lab\Project_OT_2018';

save=1;

%% Calculate the Background

% v.CurrentTime=373;
% All=rgb2gray(readFrame(v));
% while(v.CurrentTime<396)
%     % v.CurrentTime=83;
%     % bg=load('bg.mat');
%     A=readFrame(v);
% 
%     A=rgb2gray(A);
% 
%     All(:,:,end+1)=A;
% end
% bg=mean(All,3);
% v.CurrentTime=0;
%    

%% Check
v.CurrentTime=16;
A=readFrame(v);
A=rgb2gray(A);
% bg=A;
A=A-bg;
% p=4.56
% imshow(A)
% A=A(777:1024,624:939); %Location of the reference particle

A=imadjust(A);

% imshow(A);
% figure();
% lk=1.24
% A=im2bw(A,0);
% A=A(337:737,478:887); %Location of the trap

[centers, radii] = imfindcircles(A,[11 14],'ObjectPolarity','bright','Sensitivity',0.95);
% [centx,centy,rad]=radialcenter(double(A));
imshow(A)
% viscircles([centx,centy], radii,'EdgeColor','b');
viscircles(centers, radii,'EdgeColor','b');
%%
v.CurrentTime=251;
A=readFrame(v);
% A=rgb2gray(A);
% A=A-bg;
A=imadjust(A);
[xc yc sigma]=radialcenter(double(A));

imshow(A)
% viscircles([centx,centy], radii,'EdgeColor','b');
viscircles([xc ,yc], 10,'EdgeColor','b');

%%
j=1;  % Select your interested time interval from TIMES
startTime=TIMES(j,1);
endTime=TIMES(j,2);

len=round((endTime-startTime)*Fs)+1;
cents=zeros(len,2);
rads=zeros(len,1);
time=zeros(len,1);
v.CurrentTime=startTime;
%%
k=1;
l=zeros(length(time),1);
%%

% while(v.hasFrame)
while(v.CurrentTime<endTime)
    A=readFrame(v);
%     A=rgb2gray(A);
%     A=A-bg;
%     A=rgb2gray(A);
%     A=A-bg;
%     A=imadjust(A);
    
%
%     A=im2bw(A,0);
    
    
    try
        [centers, radii] = imfindcircles(A,[13 19],'ObjectPolarity','bright','Sensitivity',0.95);
        cents(k,1)=centers(1);
        cents(k,2)=centers(2);
        sprintf('%d',k)
        rads(k)=radii;
%         
%         [centsx,centsy,radii]=radialcenter(im2double(A));
%         rads(k)=radii;
%         sprintf('%d',k)
%         cents(k,1)=centsx;
%         cents(k,2)=centsy;
                
    catch causeexception
        l(k)=k;
        sprintf('%d',k)
        cents(k,1:2)=cents(k-1,1:2); %Hiding the errors for continuity
        rads(k)=rads(k-1);
    end
    time(k)=v.CurrentTime;
    k=k+1;
    
end
l2=find(l);


%% Create an image sequence
ii = 1;

while hasFrame(shuttleVideo)
   img = readFrame(shuttleVideo);
   filename = [sprintf('%03d',ii) '.jpg'];
   fullname = fullfile(workingDir,'images',filename);
   imwrite(img,fullname)    % Write out to a JPEG file (img1.jpg, img2.jpg, etc.)
   ii = ii+1;
end
%% Parallel computation
tmpx=[];
% while(v.hasFrame)
parfor(k=1:1:len)
    v.CurrentTime=startTime+k/Fs;

    A=readFrame(v);
%     A=rgb2gray(A);
%     A=A-bg;
%     A=rgb2gray(A);
%     A=A-bg;
%     A=imadjust(A);
    
%
%     A=im2bw(A,0);
    
    
    try
        [centers, radii] = imfindcircles(A,[13 19],'ObjectPolarity','bright','Sensitivity',0.95);
        cents(k)=centers;
        
        sprintf('%d',k)
        rads(k)=radii;
        centers=[]
        radii=[]

%         
%         [centsx,centsy,radii]=radialcenter(im2double(A));
%         rads(k)=radii;
%         sprintf('%d',k)
%         cents(k,1)=centsx;
%         cents(k,2)=centsy;
                
    catch causeexception
        l(k)=k;
        sprintf('%d',k)
%         cents(k,1:2)=cents(k-1,1:2); %Hiding the errors for continuity
%         rads(k)=rads(k-1);
    end
    time(k)=v.CurrentTime;
    
    
end

l2=find(l);


%% Removing the errors by iterating over errors with varying sensitivities or other parameters

m=[];
for p=1:length(l2)
    k=l2(p);
    v.CurrentTime=time(k-1);
    A=readFrame(v);
    A=imadjust(A);

%     A=rgb2gray(A);
%     A=A-bg;
%     A=A(337:737,478:887); %Location of the circular trap

%     A=A-bg;

%     A=im2bw(A,0);
    
    try
%         [centers, radii] = imfindcircles(A,[14 25],'ObjectPolarity','dark','Sensitivity',0.92);
        cents(k,1)=centers(1);
        cents(k,2)=centers(2);
        rads(k)=radii;
%         sprintf('%d',k)
    catch causeexception
        m(end+1)=k;
        sprintf('%d',k)
        cents(k,1:2)=cents(k-1,1:2);
        rads(k)=rads(k-1);
    end
end
l2=m;
%%
cents=cents(1:end-1,:);

%% Make a dynamic plot
% motions
hold on;
for i=1:length(time)
    h = scatter(cents(i,1),cents(i,2));
    pause(0.00001);
%     delete(h);
end

%% Angular plot
%Finding Centers from scatter Plot
CenterX=165.59;
CenterY=128.79;
[Angles,rhos]=cart2pol((cents(:,1)-CenterX),(cents(:,2)-CenterY));
% thetas=Angles(rhos<200);
thetas=Angles;
%% histogram of angular position
figure();
HistBW=0.01;
ThetaHist=histogram(thetas,'binWidth',HistBW);

title('histogram of angle distribution')
xlabel('angle')
ylabel('Probability')
set(gca, 'YScale', 'log')

%% Plot for U(theta) is variance of r with theta
NBins=100;
SD_R=zeros(100,1);
theta=-pi:2*pi/NBins:pi;
for i=1:1:NBins-1
    SD_R(i)=std(rhos(and(Angles>theta(i),Angles<theta(i+1))));
end

Kring=1./(sqrt(SD_R));
plot(theta(1:end-1),Kring)

xlabel('Theta')
ylabel('Kring')


%% plot of dtheta/dt
figure();
theta=unwrap(thetas);
DthetaByDt=diff(theta)*Fs;
histogram(DthetaByDt,'binwidth',0.1)
% set(gca, 'YScale', 'log')
title('speed distribution Histogram')
xlabel('speedValues')
ylabel('pixels/sec')

% ylim([1e1 1e4])
%% Plot Speed and position with time
speeds=sqrt(diff(cents(:,2)).^2+diff(cents(:,1)).^2);
plot(speeds)
hold on
plot(thetas)
hold off
%% Plot of Speed vs time

thetas2=smooth(thetas,5);
theta2=smooth(theta,5);

speed_theta=diff(theta2);

plot(speed_theta)
hold on
plot(thetas2);
hold off


% pbaspect([1 1 1])
% daspect([1 1 1])
%% Saving data and plots


% FileNam='1b_1';  %CAUTION. Don't forget to rename file
% save(strcat(FileNam,'data.mat'),'cents','Fs','rads','time','l2');


%% Plot of Average speed vs angle
k=10;

d=k*HistBW;

% thetas=thetas(1:end-1); %If mismatch of thetas and speeds dimensions
s=[];
for th = -pi:d:pi-d
    
    s(end+1) = mean(speeds(thetas<th+d & thetas>th));
    

end
th = [-pi:d:pi-d];
plot(th,s)
title('Plot of smoothened speed vs angle')
xlabel('angle (binwidth=0.1 Radians)')
ylabel('Average speed')
%%
histogram(s,'binwidth',0.01)
title('histogram of smoothened speed')
xlabel('angular speed')
ylabel('Occurence')


%%
figure();
BinWidth=50;
i=1:BinWidth:length(thetas);
% times=time(i);
DthetaMean=[];
for j=1:1:length(i)-1
    DthetaMean(end+1)=mean(thetas(i(j):i(j+1)));
end

% plot(times(1:end-1)-times(1),DthetaMean)
plot(DthetaMean)
title(sprintf('Mean speed v/s time  binwidth %d',BinWidth))
xlabel('time in seconds')
ylabel('Mean Speed')
%%
B=histogram(DthetaMean,'binwidth',0.2);
plot(B.BinEdges(1:end-1),-log(B.Values))
xlabel('angle')
